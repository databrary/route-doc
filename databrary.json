{  
   "swagger":"2.0",
   "info":{  
      "description":"This documents Databrary's internal routes, using ReDoc",
      "version":"1.0.0",
      "title":"Databrary Internal Route Documentation",
   },
   "tags":[  
      {  
         "name":"login/register",
         "description":"user"
      },
      {  
         "name":"party",
         "description":"user"
      },
      {  
         "name":"volume",
         "description":"project"
      }
   ],
   "schemes":[  
      "https",
      "http"
   ],
   "paths":{  
      "/api/register":{
         "post":{
            "tags":[  
               "login/register"
            ],
            "summary":"Post registrant's info",
            "description":"Post registrant's info",
            "operationId":"postRegistrant",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post registrant",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/registrant"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"string",
                     "example":"Your confirmation email has been sent to 'jsmith@university.edu'."
                  },
                  "produces":[
                     "text/plain"
                  ]
               },
               "400":{  
                  "description":"Error"
               }
            }
         }
      },
      "/api/user/login":{
         "post":{
            "tags":[  
               "login/register"
            ],
            "summary":"Post user's login info",
            "description":"Post user's login info",
            "operationId":"postuserLogin",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post user login",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/userlogin"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{   
                     "$ref":"#/definitions/user"
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         }
      },
      "/api/user/password":{
         "post":{
            "tags":[  
               "login/register"
            ],
            "summary":"Post password reset request",
            "description":"Post password reset request",
            "operationId":"postuserPassword",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post password reset email",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "email":{  
                           "type":"string",
                           "example":"jsmith@university.edu"
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"string",
                     "example":"Your password reset information has been sent to 'jsmith@university.edu'."
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         }
      },
      "/api/user/logout":{
         "post":{
            "tags":[  
               "login/register"
            ],
            "summary":"Post logout",
            "description":"Post logout",
            "operationId":"postuserLogout",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{   
                     "$ref":"#/definitions/userlogout"
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         }
      },
      "/api/profile":{
         "get":{
            "tags":[  
               "party"
            ],
            "summary":"Get user profile",
            "description":"Get user profile",
            "operationId":"getProfile",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{   
                     "$ref":"#/definitions/profile",
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         }
      },
      "/api/party":{  
         "get":{  
            "tags":[  
               "party"
            ],
            "summary":"Get all parties",
            "description":"Return all parties",
            "operationId":"getAllParties",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/party"
                     }
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         }
      },
      "/api/party/{partyid}":{  
         "get":{  
            "tags":[  
               "party"
            ],
            "summary":"Find party by Id",
            "description":"Return a party by ID",
            "operationId":"findpartyById",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"partyid",
                  "in":"path",
                  "description":"ID of the party",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/getparty"
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         },
         "post":{  
            "tags":[  
               "party"
            ],
            "summary":"Post party info by Id",
            "description":"Post party info by ID",
            "operationId":"postpartyById",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"partyid",
                  "in":"path",
                  "description":"ID of the party",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post party info",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "affiliation":{  
                           "type":"string",
                           "example":"jsmith@university.edu"
                        },
                        "prename":{  
                           "type":"string",
                           "example":"Jane"
                        },
                        "sortname":{  
                           "type":"string",
                           "example":"Smith"
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/profile"
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         }
      },
      "/api/party/{partyid}/authorize/{affiliateid}":{  
         "post":{  
            "tags":[  
               "party"
            ],
            "summary":"Post affiliate authorization by Id",
            "description":"Post affiliate authorization by ID",
            "operationId":"postaffiliateauthorizationById",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"partyid",
                  "in":"path",
                  "description":"ID of the party",
                  "required":true,
                  "type":"string"
               },
               {  
                  "name":"affiliateid",
                  "in":"path",
                  "description":"ID of the affiliate",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post authorization of affiliate",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "expires":{  
                           "type":"string",
                           "example":"2020-07-09"
                        },
                        "member":{  
                           "type":"integer",
                           "example":"2"
                        },
                        "site":{  
                           "type":"integer",
                           "example":"3"
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/authorizeaffiliate"
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         },
         "delete":{  
            "tags":[  
               "party"
            ],
            "summary":"Delete affiliate authorization by Id",
            "description":"Delete affiliate authorization by ID",
            "operationId":"deleteaffiliateauthorizationById",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"partyid",
                  "in":"path",
                  "description":"ID of the party",
                  "required":true,
                  "type":"string"
               },
               {  
                  "name":"affiliateid",
                  "in":"path",
                  "description":"ID of the affiliate",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/affiliate"
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         }
      },
      "/api/volume":{  
         "get":{  
            "tags":[  
               "volume"
            ],
            "summary":"Get all volumes",
            "description":"Return all volumes",
            "operationId":"getAllVolumes",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/volume"
                     }
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         },
         "post":{  
            "tags":[  
               "volume"
            ],
            "summary":"Create volume",
            "description":"Create volume",
            "operationId":"createvolume",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Create volume",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/createvolume"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/postvolumeresult"
                     }
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         }
      },
      "/api/volume/{volumeid}":{  
         "get":{  
            "tags":[  
               "volume"
            ],
            "summary":"Find volume by Id",
            "description":"Return a volume by ID",
            "operationId":"findVolumeById",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/volume"
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         },
         "post":{  
            "tags":[  
               "volume"
            ],
            "summary":"Post volume by Id",
            "description":"Post a volume by ID",
            "operationId":"postVolumeById",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post volume info",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/postvolume"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/postvolumeresult"
                  }
               },
               "400":{  
                  "description":"Error"
               }
            }
         }
      }
   },
   "securityDefinitions":{  
   },
   "definitions":{  
      "volume":{  
         "type":"object",
         "properties":{  
            "id":{  
               "type":"integer",
               "example":2
            },
            "alias":{  
               "type":"string",
               "example":"pilot"
            },
            "body":{  
               "type":"string",
               "example":"Databrary is an open data library for developmental science. Share video, audio, and related metadata."
            },
            "creation":{  
               "type":"string",
               "example":"2018-07-09T17:15:49.694977Z"
            },
            "doi":{  
               "type":"string",
               "example":"10.17910/B7159Z"
            },
            "name":{  
               "type":"string",
               "example":"Databrary"
            },
            "owners":{
               "type": "array",
               "items": {
                  "$ref":"#/definitions/owner"
               } 
            },
            "permission":{  
               "type":"integer",
               "example":5
            },
            "publicsharefull":{  
               "type":"boolean",
               "example":true
            }
         }
      },
      "postvolume":{  
         "type":"object",
         "properties":{  
            "citation":{  
               "type":"object",
               "properties":{
                  "head": {
                     "type":"string"
                  }
               }
            },
            "body":{  
               "type":"string"
            },
            "name":{  
               "type":"string"
            },
            "published":{  
               "type":"boolean"
            }
         }
      },
      "createvolume":{  
         "type":"object",
         "properties":{  
            "owner":{  
               "type":"integer"
            },
            "citation":{  
               "type":"object",
               "properties":{
                  "head": {
                     "type":"string"
                  }
               }
            },
            "body":{  
               "type":"string"
            },
            "name":{  
               "type":"string"
            },
            "published":{  
               "type":"boolean"
            }
         }
      },
      "postvolumeresult":{  
         "type":"object",
         "properties":{  
            "id":{  
               "type":"integer"
            },
            "citation":{  
               "type":"string"
            },
            "body":{  
               "type":"string"
            },
            "creation":{  
               "type":"string"
            },
            "doi":{  
               "type":"string"
            },
            "name":{  
               "type":"string"
            },
            "owners":{
               "type": "array",
               "items": {
                  "$ref":"#/definitions/owner"
               } 
            },
            "permission":{  
               "type":"integer"
            },
            "publicsharefull":{  
               "type":"boolean"
            }
         }
      },
      "owner":{
         "type":"object",
         "properties":{ 
            "name": {
               "type":"string",
               "example":"Smith, Jane"
            },
            "id":{  
               "type":"integer",
               "example":"7"
            }
         }
      },
      "registrant":{
         "type":"object",
         "properties":{ 
            "prename": {
               "type":"string",
               "example":"Jane"
            },
            "sortname": {
               "type":"string",
               "example":"Smith"
            },
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "agreement":{  
               "type":"boolean"
            }
         }
      },
      "userlogin":{
         "type":"object",
         "properties":{ 
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "password":{  
               "type":"string",
               "example":"strongpassword"
            }
         }
      },
      "userlogout":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":-1
            },
            "authorization":{  
               "type":"integer",
               "example":0
            },
            "institution": {
               "type":"boolean",
               "example":true
            },
            "sortname":{  
               "type":"string",
               "example":"Nobody"
            }
         }
      },
      "getparty":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":7
            },
            "affiliation": {
               "type":"string",
               "example":"New York University"
            },
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "prename": {
               "type":"string",
               "example":"Jane"
            },
            "sortname":{  
               "type":"string",
               "example":"Smith"
            },
            "permission":{  
               "type":"integer",
               "example":5
            }
         }
      },
      "authorizeaffiliate": {
         "type":"object",
         "properties":{  
            "expires":{  
               "type":"string",
               "example":"2020-07-09"
            },
            "member":{  
               "type":"integer",
               "example":2
            },
            "site":{  
               "type":"integer",
               "example":3
            },
            "party":{
               "$ref":"#/definitions/affiliate"
            },
         }
      },
      "party":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":7
            },
            "affiliation": {
               "type":"string",
               "example":"New York University"
            },
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "prename": {
               "type":"string",
               "example":"Jane"
            },
            "sortname":{  
               "type":"string",
               "example":"Smith"
            }
         }
      },
      "affiliate":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":3
            },
            "affiliation": {
               "type":"string",
               "example":"New York University"
            },
            "email": {
               "type":"string",
               "example":"llee@university.edu"
            },
            "prename": {
               "type":"string",
               "example":"Lisa"
            },
            "sortname":{  
               "type":"string",
               "example":"Lee"
            }
         }
      },
      "profile":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":7
            },
            "affiliation": {
               "type":"string",
               "example":"New York University"
            },
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "prename": {
               "type":"string",
               "example":"Jane"
            },
            "permission":{  
               "type":"integer",
               "example":5
            },
            "sortname":{  
               "type":"string",
               "example":"Smith"
            }
         }
      },
      "user":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":7
            },
            "authorization":{  
               "type":"integer",
               "example":5
            },
            "permission":{  
               "type":"integer",
               "example":5
            },
            "affiliation": {
               "type":"string",
               "example":"New York University"
            },
            "csverf":{  
               "type":"string",
               "example":"QxNXAduisOc_czDG"
            },
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "prename": {
               "type":"string",
               "example":"Jane"
            },
            "sortname":{  
               "type":"string",
               "example":"Smith"
            }
         }
      }

   },
   "externalDocs":{  
      "description":"Find out more about Swagger",
      "url":"http://swagger.io"
   }
}