{  
   "swagger":"2.0",
   "info":{  
      "description":"This documents Databrary's internal routes, using ReDoc",
      "version":"1.0.0",
      "title":"Databrary Internal Route Documentation",
   },
   "tags":[  
      {  
         "name":"login/register",
         "description":"These routes are used to create a user account and to log in and out an existing user"
      },
      {  
         "name":"party",
         "description":"A party is any user of Databrary, be it an individual or an institution."
      },
      {  
         "name":"volume",
         "description":"A volume is a study or a project."
      },
      {  
         "name":"spreadsheet",
         "description":"These routes are used for designing the spreadsheet of volume data."
      },
      {  
         "name":"session/materials folder",
         "description":"These routes are used for creating, deleting, modifying folders in a volume."
      },
      {  
         "name":"file",
         "description":"These routes are used for uploading and deleting files in a volume."
      },
      {  
         "name":"participant record",
         "description":"These routes are used for creating, deleting, modifying records of participants in a study."
      },
      {  
         "name":"search",
         "description":"These routes are used for searching parties, volumes, or DOI links."
      },
      {  
         "name":"site stats",
         "description":"These routes are used to show website statistics on the home page."
      }
   ],
   "schemes":[  
      "https",
      "http"
   ],
   "paths":{  
      "/api/register":{
         "post":{
            "tags":[  
               "login/register"
            ],
            "summary":"Post registrant's info",
            "description":"Post registrant's info",
            "operationId":"postRegister",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post registrant",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/registrant"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"string",
                     "example":"Your confirmation email has been sent to 'jsmith@university.edu'."
                  },
                  "produces":[
                     "text/plain"
                  ]
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/token/{byteString0}":{
         "get":{
            "tags":[  
               "login/register"
            ],
            "summary":"Get login token",
            "description":"Get login token",
            "operationId":"getLoginToken",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"byteString0",
                  "in":"path",
                  "description":"token",
                  "required":true,
                  "type":"string",
                  "example":"NuHqOHRqhp03dNscjpeGvWimWUu_P6PGN8h5Pgmllt4JwExtmL0yere1SqfDXomspQs2efz4xJyEMh"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/gettoken"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "post":{
            "tags":[  
               "login/register"
            ],
            "summary":"Post password token",
            "description":"Post password token",
            "operationId":"postPasswordToken",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"byteString0",
                  "in":"path",
                  "description":"token",
                  "required":true,
                  "type":"string",
                  "example":"NuHqOHRqhp03dNscjpeGvWimWUu_P6PGN8h5Pgmllt4JwExtmL0yere1SqfDXomspQs2efz4xJyEMh"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post registrant",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/password"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{   
                     "$ref":"#/definitions/registeruser"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/party/{affiliateid}/apply/{partyid}":{  
         "post":{  
            "tags":[  
               "login/register"
            ],
            "summary":"Post affiliate application by Id",
            "description":"Post affiliate application by ID",
            "operationId":"postAuthorize",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"partyid",
                  "in":"path",
                  "description":"ID of the party",
                  "required":true,
                  "type":"string",
                  "example":"7"
               },
               {  
                  "name":"affiliateid",
                  "in":"path",
                  "description":"ID of the affiliate",
                  "required":true,
                  "type":"string",
                  "example":"3"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post authorization of affiliate",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/affiliateapply"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "login/register"
            ],
            "summary":"Delete affiliate application by Id",
            "description":"Delete affiliate application by ID",
            "operationId":"deleteAuthorizeParent",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"partyid",
                  "in":"path",
                  "description":"ID of the party",
                  "required":true,
                  "type":"string",
                  "example":"7"
               },
               {  
                  "name":"affiliateid",
                  "in":"path",
                  "description":"ID of the affiliate",
                  "required":true,
                  "type":"string",
                  "example":"3"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation"
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/user/login":{
         "post":{
            "tags":[  
               "login/register"
            ],
            "summary":"Post user's login info",
            "description":"Post user's login info",
            "operationId":"postLogin",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post user login",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/userlogin"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{   
                     "$ref":"#/definitions/user"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/user":{
         "get":{
            "tags":[  
               "login/register"
            ],
            "summary":"Get user info",
            "description":"Get user info",
            "operationId":"getUser",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{   
                     "$ref":"#/definitions/user"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "post":{
            "tags":[  
               "login/register"
            ],
            "summary":"Post user info",
            "description":"Post user info",
            "operationId":"postUser",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post user",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/postuser"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{   
                     "$ref":"#/definitions/user"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/user/password":{
         "post":{
            "tags":[  
               "login/register"
            ],
            "summary":"Post password reset request",
            "description":"Post password reset request",
            "operationId":"postPasswordReset",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post password reset email",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "email":{  
                           "type":"string",
                           "example":"jsmith@university.edu"
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"string",
                     "example":"Your password reset information has been sent to 'jsmith@university.edu'."
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/user/logout":{
         "post":{
            "tags":[  
               "login/register"
            ],
            "summary":"Post logout",
            "description":"Post logout",
            "operationId":"postLogout",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{   
                     "$ref":"#/definitions/userlogout"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/profile":{
         "get":{
            "tags":[  
               "party"
            ],
            "summary":"Get user profile",
            "description":"Get user profile",
            "operationId":"getProfile",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{   
                     "$ref":"#/definitions/profile",
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/party":{  
         "get":{  
            "tags":[  
               "party"
            ],
            "summary":"Get all parties",
            "description":"Return all parties",
            "operationId":"getParties",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/party"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/party/{partyid}":{  
         "get":{  
            "tags":[  
               "party"
            ],
            "summary":"Get party by Id",
            "description":"Get party by ID",
            "operationId":"getParty",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"partyid",
                  "in":"path",
                  "description":"ID of the party",
                  "required":true,
                  "type":"string",
                  "example":"7"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/getparty"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "post":{  
            "tags":[  
               "party"
            ],
            "summary":"Post party info by Id",
            "description":"Post party info by ID",
            "operationId":"postParty",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"partyid",
                  "in":"path",
                  "description":"ID of the party",
                  "required":true,
                  "type":"string",
                  "example":"7"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post party info",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "affiliation":{  
                           "type":"string",
                           "example":"jsmith@university.edu"
                        },
                        "prename":{  
                           "type":"string",
                           "example":"Jane"
                        },
                        "sortname":{  
                           "type":"string",
                           "example":"Smith",
                           "description":"Last name"
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/profile"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/party/{partyid}/activity":{  
         "get":{  
            "tags":[  
               "party"
            ],
            "summary":"Get party activity by Id",
            "description":"Get party activity by ID",
            "operationId":"getPartyActivity",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"partyid",
                  "in":"path",
                  "description":"ID of the party",
                  "required":true,
                  "type":"string",
                  "example":"7"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/getpartyactivity"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
      },
      "/api/notification":{  
         "get":{  
            "tags":[  
               "party"
            ],
            "summary":"Get all notifications",
            "description":"Get all notifications for the current user",
            "operationId":"getNotifications",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/notification"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "party"
            ],
            "summary":"Delete all notifications",
            "description":"Delete all notifications for the current user",
            "operationId":"deleteNotifications",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation"
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/notification/{notificationid}":{  
         "delete":{  
            "tags":[  
               "party"
            ],
            "summary":"Delete a notification by ID",
            "description":"Delete a notification by ID",
            "operationId":"deleteNotification",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"notificationid",
                  "in":"path",
                  "description":"ID of the notification",
                  "required":true,
                  "type":"string",
                  "example":"5"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation"
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/party/{partyid}/authorize/{affiliateid}":{  
         "post":{  
            "tags":[  
               "party"
            ],
            "summary":"Post affiliate authorization by Id",
            "description":"Post affiliate authorization by ID",
            "operationId":"postAuthorize",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"partyid",
                  "in":"path",
                  "description":"ID of the party",
                  "required":true,
                  "type":"string",
                  "example":"7"
               },
               {  
                  "name":"affiliateid",
                  "in":"path",
                  "description":"ID of the affiliate",
                  "required":true,
                  "type":"string",
                  "example":"3"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post authorization of affiliate",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "expires":{  
                           "type":"string",
                           "example":"2020-07-09"
                        },
                        "member":{  
                           "type":"integer",
                           "example":"2"
                        },
                        "site":{  
                           "type":"integer",
                           "example":"3"
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/authorizeaffiliate"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "party"
            ],
            "summary":"Delete affiliate authorization by Id",
            "description":"Delete affiliate authorization by ID",
            "operationId":"deleteAuthorize",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"partyid",
                  "in":"path",
                  "description":"ID of the party",
                  "required":true,
                  "type":"string",
                  "example":"7"
               },
               {  
                  "name":"affiliateid",
                  "in":"path",
                  "description":"ID of the affiliate",
                  "required":true,
                  "type":"string",
                  "example":"3"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/affiliate"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume":{  
         "get":{  
            "tags":[  
               "volume"
            ],
            "summary":"Get all volumes",
            "description":"Return all volumes",
            "operationId":"getVolumes",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/volume"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "post":{  
            "tags":[  
               "volume"
            ],
            "summary":"Create volume",
            "description":"Create volume",
            "operationId":"createVolume",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Create volume",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/createvolume"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/postvolumeresult"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}":{  
         "get":{  
            "tags":[  
               "volume"
            ],
            "summary":"Get volume by Id",
            "description":"Get volume by ID",
            "operationId":"getVolume",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/volume"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "post":{  
            "tags":[  
               "volume"
            ],
            "summary":"Post volume by Id",
            "description":"Post a volume by ID",
            "operationId":"postVolume",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post volume info",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/postvolume"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/postvolumeresult"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/access/{partyid}":{  
         "post":{  
            "tags":[  
               "volume"
            ],
            "summary":"Post volume access by Id",
            "description":"Post a volume access by ID",
            "operationId":"postVolumeAccess",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "name":"partyid",
                  "in":"path",
                  "description":"ID of the party",
                  "required":true,
                  "type":"string",
                  "example":"7"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post volume info",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/postvolumeaccess"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/postvolumeaccessresult"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/funder/{funderid}":{  
         "post":{  
            "tags":[  
               "volume"
            ],
            "summary":"Post volume funding by Id",
            "description":"Post volume funding by ID",
            "operationId":"postVolumeFunding",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"funderid",
                  "in":"path",
                  "description":"ID of the funder",
                  "required":true,
                  "type":"string",
                  "example":"100000001"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post funder info",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "awards":{  
                           "type":"array",
                           "items": {
                              "type":"string",
                              "example":"INT-0808767"
                           }
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/funding"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "volume"
            ],
            "summary":"Delete volume funding by Id",
            "description":"Delete volume funding by ID",
            "operationId":"deleteVolumeFunder",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"funderid",
                  "in":"path",
                  "description":"ID of the funder",
                  "required":true,
                  "type":"string",
                  "example":"100000001"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/volume"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/funder":{  
         "get":{  
            "tags":[  
               "search"
            ],
            "summary":"Search funders",
            "description":"Search funders",
            "operationId":"getFunders",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"query",
                  "in":"query",
                  "description":"funder query",
                  "required":true,
                  "type":"string",
                  "example":"national+science+foundation"
               },
               {  
                  "name":"all",
                  "in":"query",
                  "description":"query scope",
                  "required":false,
                  "type":"string"
               },
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/funder"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/link":{  
         "post":{  
            "tags":[  
               "volume"
            ],
            "summary":"Post volume doi link by Id",
            "description":"Post volume doi link by ID",
            "operationId":"postVolumeLinks",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post volume info",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/link"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/volumewithlinks"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/activity":{  
         "get":{  
            "tags":[  
               "volume"
            ],
            "summary":"Get volume activity by Id",
            "description":"Get volume activity by ID",
            "operationId":"getVolumeActivity",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/volumeactivity"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/record":{  
         "post":{  
            "tags":[  
               "participant record"
            ],
            "summary":"Create participant record",
            "description":"Create a record for the participant of the study",
            "operationId":"createRecord",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Create record",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{
                        "category":{
                           "type":"integer",
                           "example":1
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/createrecord"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/record/{recordid}":{  
         "get":{  
            "tags":[  
               "participant record"
            ],
            "summary":"Get participant record",
            "description":"Get participant record",
            "operationId":"getRecord",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"recordid",
                  "in":"path",
                  "description":"ID of the record",
                  "required":true,
                  "type":"string",
                  "example":"1"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/postrecord"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "participant record"
            ],
            "summary":"Delete participant record",
            "description":"Delete participant record",
            "operationId":"deleteRecord",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"recordid",
                  "in":"path",
                  "description":"ID of the record",
                  "required":true,
                  "type":"string",
                  "example":"1"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation"
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/record/{recordid}/metric/{metricid}":{  
         "post":{  
            "tags":[  
               "participant record"
            ],
            "summary":"Post participant record metric",
            "description":"Post participant record metric like birthdate, gender, race, etc.",
            "operationId":"postRecordMeasure",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"recordid",
                  "in":"path",
                  "description":"ID of the record",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "name":"metricid",
                  "in":"path",
                  "description":"ID of the metric",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post record",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{
                        "datum":{
                           "type":"string",
                           "example":"1"
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/postrecord"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/detectParticipantCSV":{  
         "post":{  
            "tags":[  
               "participant record"
            ],
            "summary":"Upload and parse participant metadata CSV file",
            "description":"Upload and parse participant metadata CSV file",
            "operationId":"detectParticipantCSV",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/detectCSV"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/runParticipantUpload":{  
         "post":{  
            "tags":[  
               "participant record"
            ],
            "summary":"Confirm participant metadata from the CSV file uploaded",
            "description":"Confirm participant metadata from the CSV file uploaded",
            "operationId":"runParticipantUpload",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Upload participant metadata csv",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{
                        "csv_upload_id": {
                           "type":"string",
                           "example":"7-1-metadata.csv"
                        },
                        "selected_mapping":{
                           "type":"array",
                           "items": {
                              "type":"object",
                              "properties":{  
                                 "metric":{  
                                    "type":"string",
                                    "example":"id"
                                 },
                                 "csv_field":{  
                                    "type":"string",
                                    "example":"id"
                                 }
                              }
                           }
                        },
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "id":{  
                           "type":"integer",
                           "example":1
                        },
                        "succeeded":{  
                           "type":"boolean",
                           "example":true
                        }
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/category/{categoryid}":{  
         "put":{  
            "tags":[  
               "spreadsheet"
            ],
            "summary":"Add a category for the spreadsheet",
            "description":"Add a category for the spreadsheet like participant, pilot, exclusion, etc.",
            "operationId":"addVolumeCategory",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "name":"categoryid",
                  "in":"path",
                  "description":"ID of the category",
                  "required":true,
                  "type":"string",
                  "example":"1"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{
                        "type":"integer",
                        "example":1
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "spreadsheet"
            ],
            "summary":"Delete a category from the spreadsheet",
            "description":"Delete a category from the spreadsheet",
            "operationId":"deleteVolumeCategory",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "name":"categoryid",
                  "in":"path",
                  "description":"ID of the category",
                  "required":true,
                  "type":"string",
                  "example":"1"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"string",
                     "example":"7"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/metric/{metricid}":{  
         "put":{  
            "tags":[  
               "spreadsheet"
            ],
            "summary":"Add a metric under a category",
            "description":"Add a metric under a category",
            "operationId":"addVolumeMetric",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "name":"metricid",
                  "in":"path",
                  "description":"ID of the metric",
                  "required":true,
                  "type":"string",
                  "example":"2"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{
                        "type":"integer",
                        "example":2
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "spreadsheet"
            ],
            "summary":"Delete a metric under a category",
            "description":"Delete a metric under a category",
            "operationId":"deleteVolumeMetric",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "name":"metricid",
                  "in":"path",
                  "description":"ID of the metric",
                  "required":true,
                  "type":"string",
                  "example":"2"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"string",
                     "example":"1"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/slot":{  
         "post":{  
            "tags":[  
               "session/materials folder"
            ],
            "summary":"Create a session or materials folder",
            "description":"Create a session or materials folder",
            "operationId":"createContainer",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/createslot"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/upload":{  
         "post":{  
            "tags":[  
               "file"
            ],
            "summary":"Start uploading a file",
            "description":"Start uploading a file",
            "operationId":"uploadStart",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post file info",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "filename":{
                           "type":"string",
                           "example":"File.mp4"
                        },
                        "size":{  
                           "type":"integer",
                           "example":394499
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"string",
                     "example":"fH_AYX37Oy_wajSmY_QrtdRDnMyOnBN7"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/upload":{  
         "post":{  
            "tags":[  
               "file"
            ],
            "summary":"Upload a file in chunks",
            "description":"Upload a file in chunks",
            "operationId":"uploadChunk",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "name":"flowChunkNumber",
                  "in":"query",
                  "description":"query keyword",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "name":"flowChunkSize",
                  "in":"query",
                  "description":"query keyword",
                  "required":true,
                  "type":"string",
                  "example":"1048576"
               },
               {  
                  "name":"flowCurrentChunkSize",
                  "in":"query",
                  "description":"query keyword",
                  "required":true,
                  "type":"string",
                  "example":"394499"
               },
               {  
                  "name":"flowTotalSize",
                  "in":"query",
                  "description":"query keyword",
                  "required":true,
                  "type":"string",
                  "example":"394499"
               },
               {  
                  "name":"flowIdentifier",
                  "in":"query",
                  "description":"query keyword",
                  "required":true,
                  "type":"string",
                  "example":"fH_AYX37Oy_wajSmY_QrtdRDnMyOnBN7"
               },
               {  
                  "name":"flowFilename",
                  "in":"query",
                  "description":"query keyword",
                  "required":true,
                  "type":"string",
                  "example":"File.mp4"
               },
               {  
                  "name":"flowRelativePath",
                  "in":"query",
                  "description":"query keyword",
                  "required":true,
                  "type":"string",
                  "example":"File.mp4"
               },
               {  
                  "name":"flowTotalChunks",
                  "in":"query",
                  "description":"query keyword",
                  "required":true,
                  "type":"string",
                  "example":"1"
               }

            ],
            "responses":{  
               "200":{  
                  "description":"successful operation"
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/asset":{  
         "post":{  
            "tags":[  
               "file"
            ],
            "summary":"Create a file",
            "description":"Create a file",
            "operationId":"createAsset",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post file info",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/createfile"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/file"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/asset/{assetid}":{  
         "get":{  
            "tags":[  
               "file"
            ],
            "summary":"Get a file info",
            "description":"Get a file info",
            "operationId":"getAsset",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"assetid",
                  "in":"path",
                  "description":"ID of the file",
                  "required":true,
                  "type":"string",
                  "example":"2"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/fileclassification"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "post":{  
            "tags":[  
               "file"
            ],
            "summary":"Post a file info",
            "description":"Post a file info",
            "operationId":"postAsset",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"assetid",
                  "in":"path",
                  "description":"ID of the file",
                  "required":true,
                  "type":"string",
                  "example":"2"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post file info",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "classification":{  
                           "type":"string",
                           "example":"2"
                        },
                        "name":{  
                           "type":"string",
                           "example":"File"
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/fileclassification"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "file"
            ],
            "summary":"Delete a file",
            "description":"Delete a file",
            "operationId":"deleteAsset",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"assetid",
                  "in":"path",
                  "description":"ID of the file",
                  "required":true,
                  "type":"string",
                  "example":"2"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/fileclassification"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/slot/{slotid}":{  
         "post":{  
            "tags":[  
               "session/materials folder"
            ],
            "summary":"Post a session or materials folder info",
            "description":"Post a session or materials folder info",
            "operationId":"postContainer",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"slotid",
                  "in":"path",
                  "description":"ID of the session or materials folder",
                  "required":true,
                  "type":"string",
                  "example":"5"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post slot info",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "top":{  
                           "type":"boolean",
                           "example":false
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/createslot"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "session/materials folder"
            ],
            "summary":"Delete a session or materials folder info",
            "description":"Delete a session or materials folder info",
            "operationId":"deleteContainer",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"slotid",
                  "in":"path",
                  "description":"ID of the session or materials folder",
                  "required":true,
                  "type":"string",
                  "example":"5"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation"
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/slot/{slotid}/activity":{  
         "get":{  
            "tags":[  
               "session/materials folder"
            ],
            "summary":"Get a session or materials folder history",
            "description":"Get a session or materials folder history",
            "operationId":"getContainerActivity",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"slotid",
                  "in":"path",
                  "description":"ID of the session or materials folder",
                  "required":true,
                  "type":"string",
                  "example":"5"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/folderactivity"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/slot/{slotid}/{segment}/keyword/{tagname}":{  
         "post":{  
            "tags":[  
               "volume"
            ],
            "summary":"Post a keyword for the volume",
            "description":"Post a keyword for the volume on the volume edit page",
            "operationId":"postKeyword",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"slotid",
                  "in":"path",
                  "description":"ID of the session or materials folder",
                  "required":true,
                  "type":"string",
                  "example":"5"
               },
               {  
                  "name":"segment",
                  "in":"path",
                  "description":"segment of the file",
                  "required":true,
                  "type":"string",
                  "example":"-"
               },
               {  
                  "name":"tagname",
                  "in":"path",
                  "description":"name of the tag",
                  "required":true,
                  "type":"string",
                  "example":"children"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/keywordresult"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "volume"
            ],
            "summary":"Delete a keyword for the volume",
            "description":"Delete a keyword for the volume on the volume edit page",
            "operationId":"deleteKeyword",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"slotid",
                  "in":"path",
                  "description":"ID of the session or materials folder",
                  "required":true,
                  "type":"string",
                  "example":"5"
               },
               {  
                  "name":"segment",
                  "in":"path",
                  "description":"segment of the file",
                  "required":true,
                  "type":"string",
                  "example":"-"
               },
               {  
                  "name":"tagname",
                  "in":"path",
                  "description":"name of the tag",
                  "required":true,
                  "type":"string",
                  "example":"children"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/deletekeyword"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/slot/{slotid}/{segment}/tag/{tagname}":{  
         "post":{  
            "tags":[  
               "volume"
            ],
            "summary":"Post a tag for the volume",
            "description":"Post a tag for the volume on the volume view page",
            "operationId":"postTag",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"slotid",
                  "in":"path",
                  "description":"ID of the session or materials folder",
                  "required":true,
                  "type":"string",
                  "example":"5"
               },
               {  
                  "name":"segment",
                  "in":"path",
                  "description":"segment of the file",
                  "required":true,
                  "type":"string",
                  "example":"-"
               },
               {  
                  "name":"tagname",
                  "in":"path",
                  "description":"name of the tag",
                  "required":true,
                  "type":"string",
                  "example":"children"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/keywordresult"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "volume"
            ],
            "summary":"Delete a tag for the volume",
            "description":"Delete a tag for the volume on the volume view page",
            "operationId":"deleteTag",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"slotid",
                  "in":"path",
                  "description":"ID of the session or materials folder",
                  "required":true,
                  "type":"string",
                  "example":"5"
               },
               {  
                  "name":"segment",
                  "in":"path",
                  "description":"segment of the file",
                  "required":true,
                  "type":"string",
                  "example":"-"
               },
               {  
                  "name":"tagname",
                  "in":"path",
                  "description":"name of the tag",
                  "required":true,
                  "type":"string",
                  "example":"children"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/deletekeyword"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/slot/{slotid}/{segment}/asset/{assetid}/excerpt":{  
         "post":{  
            "tags":[  
               "volume"
            ],
            "summary":"Post a highlight for the volume",
            "description":"Post a highlight for the volume",
            "operationId":"postExcerpt",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"slotid",
                  "in":"path",
                  "description":"ID of the session or materials folder",
                  "required":true,
                  "type":"string",
                  "example":"5"
               },
               {  
                  "name":"segment",
                  "in":"path",
                  "description":"segment of the file",
                  "required":true,
                  "type":"string",
                  "example":"11813,13282"
               },
               {  
                  "name":"assetid",
                  "in":"path",
                  "description":"ID of the file",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "permission":{  
                           "type":"integer",
                           "example":5
                        },
                        "segment":{  
                           "$ref":"#/definitions/segment"
                        },
                        "excerpt":{  
                           "type":"string",
                           "example":null
                        },
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "delete":{  
            "tags":[  
               "volume"
            ],
            "summary":"Delete a highlight for the volume",
            "description":"Delete a highlight for the volume",
            "operationId":"deleteExcerpt",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"slotid",
                  "in":"path",
                  "description":"ID of the session or materials folder",
                  "required":true,
                  "type":"string",
                  "example":"5"
               },
               {  
                  "name":"segment",
                  "in":"path",
                  "description":"segment of the file",
                  "required":true,
                  "type":"string",
                  "example":"11813,13282"
               },
               {  
                  "name":"assetid",
                  "in":"path",
                  "description":"ID of the file",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/slimsegment"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/slot/{slotid}/{segment}":{  
         "get":{  
            "tags":[  
               "file"
            ],
            "summary":"Get a file segment info",
            "description":"Get a file segment info",
            "operationId":"getSlot",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"slotid",
                  "in":"path",
                  "description":"ID of the session or materials folder",
                  "required":true,
                  "type":"string",
                  "example":"5"
               },
               {  
                  "name":"segment",
                  "in":"path",
                  "description":"segment of the file",
                  "required":true,
                  "type":"string",
                  "example":"11813,13282"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"object",
                     "properties":{
                        "id":{  
                           "type":"integer",
                           "example":4
                        },
                        "top":{  
                           "type":"boolean",
                           "example":true
                        },
                        "name":{  
                           "type":"string",
                           "example":"Top-level materials"
                        },
                        "segment":{  
                           "$ref":"#/definitions/segment"
                        }
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/volume/{volumeid}/slot/{slotid}/{segment}/asset/{assetid}":{  
         "get":{  
            "tags":[  
               "file"
            ],
            "summary":"Get a file segment info specific to a volume",
            "description":"Get a file segment info specific to a volume",
            "operationId":"getAssetSegment",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"volumeid",
                  "in":"path",
                  "description":"ID of the volume",
                  "required":true,
                  "type":"string",
                  "example":"1"
               },
               {  
                  "name":"slotid",
                  "in":"path",
                  "description":"ID of the session or materials folder",
                  "required":true,
                  "type":"string",
                  "example":"5"
               },
               {  
                  "name":"segment",
                  "in":"path",
                  "description":"segment of the file",
                  "required":true,
                  "type":"string",
                  "example":"-"
               },
               {  
                  "name":"assetid",
                  "in":"path",
                  "description":"ID of the file",
                  "required":true,
                  "type":"string",
                  "example":"2"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/slimsegment"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/slot/{slotid}/{segment}/comment":{  
         "post":{  
            "tags":[  
               "volume"
            ],
            "summary":"Post a comment for the volume",
            "description":"Post a comment for the volume",
            "operationId":"postComment",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"slotid",
                  "in":"path",
                  "description":"ID of the session or materials folder",
                  "required":true,
                  "type":"string",
                  "example":"5"
               },
               {  
                  "name":"segment",
                  "in":"path",
                  "description":"segment of the file",
                  "required":true,
                  "type":"string",
                  "example":"-"
               },
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post comment",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "text":{
                           "type":"string",
                           "example":"This is a comment for the volume."
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/comment"
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/search":{  
         "get":{  
            "tags":[  
               "search"
            ],
            "summary":"Search party or volume",
            "description":"Search party or volume",
            "operationId":"postSearch",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"q",
                  "in":"query",
                  "description":"query keyword",
                  "required":false,
                  "type":"string",
                  "example":"behavioral"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/searchresult"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/cite":{  
         "get":{  
            "tags":[  
               "search"
            ],
            "summary":"DOI lookup",
            "description":"DOI lookup",
            "operationId":"getCitation",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"url",
                  "in":"query",
                  "description":"query url",
                  "required":true,
                  "type":"string",
                  "example":"10.17910%2FB77P4V"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"object",
                     "properties":{
                        "head": {
                           "type":"string",
                           "example":"Smith, J. (2016). Databrary."
                        },
                        "title": {
                           "type":"string",
                           "example":"Databrary"
                        },
                        "url": {
                           "type":"string",
                           "example":"hdl:10.17910/B77P4V"
                        },
                        "year": {
                           "type":"integer",
                           "example":2004
                        },
                     }
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/tags/{tagname}":{  
         "get":{  
            "tags":[  
               "search"
            ],
            "summary":"See if a tag exists",
            "description":"See if a tag exists",
            "operationId":"getTags",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"tagname",
                  "in":"path",
                  "description":"name of the tag",
                  "required":true,
                  "type":"string",
                  "example":"children"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/tags"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/tags":{  
         "get":{  
            "tags":[  
               "site stats"
            ],
            "summary":"Get the most popular tags",
            "description":"Get the most popular tags",
            "operationId":"getTopTags",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/tags"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/activity":{  
         "get":{  
            "tags":[  
               "site stats"
            ],
            "summary":"Get the site activity",
            "description":"Get the site activity",
            "operationId":"getSiteActivity",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "$ref":"#/definitions/siteactivity"
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
      "/api/notify":{  
         "get":{  
            "tags":[  
               "party"
            ],
            "summary":"Get the user's notification settings",
            "description":"Get the user's notification settings",
            "operationId":"getNotify",
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation",
                  "schema":{  
                     "type":"array",
                     "minItems": 24,
                     "uniqueItems": true,
                     "items":{
                        "type":"integer",
                        "example":4
                     },
                  }
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         },
         "post":{  
            "tags":[  
               "party"
            ],
            "summary":"Post the user's notification settings",
            "description":"Post the user's notification settings",
            "operationId":"postNotify",
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"body",
                  "description":"Post notification settings",
                  "required":true,
                  "schema":{  
                     "type":"object",
                     "properties":{  
                        "delivery":{
                           "type":"integer",
                           "example":4
                        },
                        "notice":{  
                           "type":"array",
                           "items":{
                              "type":"integer",
                              "example":2
                           },
                        }
                     }
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"successful operation"
               },
               "400":{  
                  "description":"Error",
                  "schema":{  
                     "type":"string",
                     "example":"Something went wrong"
                  }
               }
            }
         }
      },
   },
   "securityDefinitions":{  
   },
   "definitions":{  
      "volume":{  
         "type":"object",
         "properties":{  
            "id":{  
               "type":"integer",
               "example":2
            },
            "alias":{  
               "type":"string",
               "example":"pilot"
            },
            "body":{  
               "type":"string",
               "example":"Databrary is an open data library for developmental science. Share video, audio, and related metadata."
            },
            "creation":{  
               "type":"string",
               "example":"2018-07-09T17:15:49.694977Z"
            },
            "doi":{  
               "type":"string",
               "example":"10.17910/B7159Z"
            },
            "name":{  
               "type":"string",
               "example":"Databrary"
            },
            "owners":{
               "type": "array",
               "items": {
                  "$ref":"#/definitions/owner"
               } 
            },
            "permission":{  
               "type":"integer",
               "example":5
            },
            "publicsharefull":{  
               "type":"boolean",
               "example":true
            }
         }
      },
      "volumewithlinks":{  
         "type":"object",
         "properties":{  
            "id":{  
               "type":"integer",
               "example":2
            },
            "alias":{  
               "type":"string",
               "example":"pilot"
            },
            "body":{  
               "type":"string",
               "example":"Databrary is an open data library for developmental science. Share video, audio, and related metadata."
            },
            "creation":{  
               "type":"string",
               "example":"2018-07-09T17:15:49.694977Z"
            },
            "doi":{  
               "type":"string",
               "example":"10.17910/B7159Z"
            },
            "name":{  
               "type":"string",
               "example":"Databrary"
            },
            "owners":{
               "type": "array",
               "items": {
                  "$ref":"#/definitions/owner"
               } 
            },
            "permission":{  
               "type":"integer",
               "example":5
            },
            "publicsharefull":{  
               "type":"boolean",
               "example":true
            },
            "links":{
               "$ref":"#/definitions/link"
            }
         }
      },
      "funding":{  
         "type":"object",
         "properties":{  
            "funder":{
               "$ref":"#/definitions/funder"
            },
            "awards":{
               "type": "array",
               "items": {
                  "type":"string",
                  "example":"INT-0808767"
               }
            }    
         }
      }, 
      "funder":{
         "type":"object",
         "properties":{  
            "id":{  
               "type":"string",
               "example":"100000001"
            },
            "name":{  
               "type":"string",
               "example":"National Science Foundation (NSF)"
            }
         }
      },
      "link":{
         "type":"array",
         "items": {
            "type":"object",
            "properties":{  
               "head":{  
                  "type":"string",
                  "example":"Databrary Project"
               },
               "url":{  
                  "type":"string",
                  "example":"hdl:10.17910/B77P4V"
               }
            }
         }
      },
      "postvolume":{  
         "type":"object",
         "properties":{  
            "citation":{  
               "type":"object",
               "properties":{
                  "head": {
                     "type":"string",
                     "example":"Smith, J. (2016). Databrary."
                  }
               }
            },
            "alias":{  
               "type":"string",
               "example":"pilot"
            },
            "body":{  
               "type":"string",
               "example":"Databrary is an open data library for developmental science. Share video, audio, and related metadata."
            },
            "name":{  
               "type":"string",
               "example":"Databrary"
            },
            "published":{  
               "type":"boolean",
               "example":true
            }
         }
      },
      "volumeactivity":{  
         "type":"object",
         "properties":{  
            "action":{  
               "type":"string",
               "example":"change"
            },
            "children":{  
               "type":"integer",
               "example":1
            },
            "individual":{  
               "type":"integer",
               "example":1
            },
            "ip":{  
               "type":"string",
               "example":"67.245.114.163"
            },
            "party":{
               "type":"object",
               "properties":{  
                  "id":{  
                     "type":"integer",
                     "example":-1
                  },
                  "institution":{  
                     "type":"boolean",
                     "example":true
                  },
                  "sortname":{  
                     "type":"string",
                     "example":"Everybody"
                  },
               }
            },
            "share_full":{  
               "type":"boolean",
               "example":false
            },
            "type":{  
               "type":"string",
               "example":"access"
            },
            "user":{  
               "type":"integer",
               "example":7
            },
            "when":{  
               "type":"string",
               "example":"2018-07-16T15:34:29.102903Z"
            },
         }
      },
      "tags":{
         "type":"array",
         "items":{
            "type":"string",
            "example":"children"
         }
      },
      "comment":{  
         "type":"object",
         "properties":{  
            "container":{
               "type":"object",
               "properties":{
                  "id":{
                     "type":"integer",
                     "example":1
                  },
                  "top":{
                     "type":"boolean",
                     "example":true
                  }   
               }
            },    
            "id":{
               "type":"integer",
               "example":1
            },
            "text":{
               "type":"string",
               "example":"This is a comment for the volume."
            },
            "time":{  
               "type":"string",
               "example":"2018-07-16T15:34:29.109273Z"
            },
            "who":{
               "$ref":"#/definitions/getparty"
            }
         }
      }, 
      "detectCSV":{
         "type":"object",
         "properties":{  
            "column_samples":{
               "type":"array",
               "items": {
                  "type":"object",
                  "properties":{  
                     "column_name":{  
                        "type":"string",
                        "example":"id"
                     },
                     "samples":{  
                        "type":"array",
                        "items": {
                           "type":"string",
                           "example":"1"
                        }
                     }
                  }
               }
            },
            "columns_firstvals":{
               "type":"array",
               "items": {
                  "type":"object",
                  "properties":{  
                     "column_name":{  
                        "type":"string",
                        "example":"id"
                     },
                     "samples":{  
                        "type":"array",
                        "items": {
                           "type":"string",
                           "example":"1"
                        }
                     }
                  }
               }
            },
            "csv_upload_id": {
               "type":"string",
               "example":"7-1-metadata.csv"
            },
            "id":{  
               "type":"integer",
               "example":1
            },
            "suggested_mapping":{
               "type":"array",
               "items": {
                  "type":"object",
                  "properties":{  
                     "metric":{  
                        "type":"string",
                        "example":"id"
                     },
                     "compatible_csv_fields":{  
                        "type":"array",
                        "items": {
                           "type":"string",
                           "example":"id"
                        }
                     }
                  }
               }
            },
         }
      },
      "folderactivity":{  
         "type":"object",
         "properties":{  
            "action":{  
               "type":"string",
               "example":"add"
            },
            "id":{  
               "type":"integer",
               "example":1
            },
            "segment":{  
               "type":"integer",
               "example":3314
            },
            "ip":{  
               "type":"string",
               "example":"67.245.114.163"
            },
            "type":{  
               "type":"string",
               "example":"excerpt"
            },
            "user":{  
               "type":"integer",
               "example":7
            },
            "when":{  
               "type":"string",
               "example":"2018-07-16T15:34:29.102903Z"
            },
         }
      },
      "createvolume":{  
         "type":"object",
         "properties":{  
            "owner":{  
               "type":"integer",
               "example":7
            },
            "citation":{  
               "type":"object",
               "properties":{
                  "head": {
                     "type":"string",
                     "example":"Smith, J. (2016). Databrary."
                  }
               }
            },
            "body":{  
               "type":"string",
               "example":"Databrary is an open data library for developmental science. Share video, audio, and related metadata."
            },
            "name":{  
               "type":"string",
               "example":"Databrary"
            },
            "published":{  
               "type":"boolean",
               "example":true
            }
         }
      },
      "postvolumeaccess":{
         "type":"object",
         "properties":{  
            "children":{  
               "type":"integer",
               "example":0
            },
            "extend":{  
               "type":"boolean",
               "example":false
            },
            "individual":{
               "type":"integer",
               "example":3
            }
         }
      },
      "postvolumeaccessresult":{
         "type":"object",
         "properties":{  
            "children":{  
               "type":"integer",
               "example":0
            },
            "individual":{
               "type":"integer",
               "example":3
            },
            "party":{
               "$ref":"#/definitions/getparty"
            }
         }
      },
      "postvolumeresult":{  
         "type":"object",
         "properties":{  
            "id":{  
               "type":"integer",
               "example":2
            },
            "citation":{  
               "type":"object",
               "properties":{
                  "head": {
                     "type":"string",
                     "example":"Smith, J. (2016). Databrary."
                  }
               }
            },
            "body":{  
               "type":"string",
               "example":"Databrary is an open data library for developmental science. Share video, audio, and related metadata."
            },
            "creation":{  
               "type":"string",
               "example":"2018-07-09T17:15:49.694977Z"
            },
            "doi":{  
               "type":"string",
               "example":"10.17910/B7159Z"
            },
            "name":{  
               "type":"string",
               "example":"Databrary"
            },
            "owners":{
               "type": "array",
               "items": {
                  "$ref":"#/definitions/owner"
               } 
            },
            "permission":{  
               "type":"integer",
               "example":5
            },
            "publicsharefull":{  
               "type":"boolean",
               "example":true
            }
         }
      },
      "siteactivity":{  
         "type":"object",
         "properties":{  
            "activity":{  
               "type":"array",
               "items":{
                  "type":"object",
                  "properties":{  
                     "time":{  
                        "type":"string",
                        "example":"2018-07-16T15:34:29.109273Z"
                     },
                     "volume":{
                        "$ref":"#/definitions/volume"
                     }
                  }
               }
            },
            "stats":{  
               "type":"object",
               "properties":{  
                  "assets":{  
                     "type":"integer",
                     "example":71390
                  },
                  "bytes":{  
                     "type":"integer",
                     "example":15008953257878
                  },
                  "duration":{  
                     "type":"integer",
                     "example":119567421146
                  },
                  "shared":{  
                     "type":"integer",
                     "example":232
                  },
                  "volumes":{  
                     "type":"integer",
                     "example":691
                  },
                  "authorized":{
                     "type":"array",
                     "items":{
                        "type":"integer",
                        "example":431
                     }
                  },
                  "records":{  
                     "type":"object",
                     "properties":{  
                        "1":{  
                           "type":"integer",
                           "example":15780
                        },
                        "2":{  
                           "type":"integer",
                           "example":223
                        },
                        "3":{  
                           "type":"integer",
                           "example":401
                        },
                        "4":{  
                           "type":"integer",
                           "example":559
                        },
                        "5":{  
                           "type":"integer",
                           "example":410
                        },
                        "6":{  
                           "type":"integer",
                           "example":709
                        },
                        "7":{  
                           "type":"integer",
                           "example":245
                        }
                     }
                  }
               }
            }
         }
      },
      "owner":{
         "type":"object",
         "properties":{ 
            "name": {
               "type":"string",
               "example":"Smith, Jane"
            },
            "id":{  
               "type":"integer",
               "example":"7"
            }
         }
      },
      "keywordresult":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"string",
               "example":"children"
            },
            "weight": {
               "type":"integer",
               "example":1
            },
            "coverage": {
               "type":"array",
               "items":{
                  "type":"array",
                  "items":{
                     "type":"string",
                     "example":null
                  }
               }
            },
            "keyword": {
               "type":"array",
               "items":{
                  "type":"array",
                  "items":{
                     "type":"string",
                     "example":null
                  }
               }
            }
         }
      },
      "deletekeyword":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"string",
               "example":"children"
            },
            "weight": {
               "type":"integer",
               "example":0
            },
            "coverage": {
               "type":"array"
            },
         }
      },
      "createslot":{
         "type":"object",
         "properties":{  
            "id":{  
               "type":"integer",
               "example":5
            }
         }
      },
      "createrecord":{
         "type":"object",
         "properties":{
            "category":{
               "type":"integer",
               "example":1
            },
            "id":{
               "type":"integer",
               "example":1
            },
            "measures":{
               "type":"object"
            }
         }
      },
      "postrecord":{
         "type":"object",
         "properties":{
            "category":{
               "type":"integer",
               "example":1
            },
            "id":{
               "type":"integer",
               "example":1
            },
            "measures":{
               "type":"object",
               "properties":{
                  "1":{
                     "type":"string",
                     "example":"1"
                  }
               }
            }
         }
      },
      "createfile":{
         "type":"object",
         "properties":{  
            "container":{  
               "type":"integer",
               "example":4
            },
            "name":{
               "type":"string",
               "example":"File.mp4"
            },
            "upload":{
               "type":"string",
               "example":"fH_AYX37Oy_wajSmY_QrtdRDnMyOnBN7"
            }
         }
      },
      "file":{
         "type":"object",
         "properties":{  
            "format":{  
               "type":"integer",
               "example":-800
            },
            "id":{  
               "type":"integer",
               "example":2
            },
            "name":{
               "type":"string",
               "example":"File"
            },
            "permission":{  
               "type":"integer",
               "example":5
            },
            "size":{  
               "type":"integer",
               "example":394499
            },
            "duration":{  
               "type":"integer",
               "example":40000
            },
         }
      },
      "fileclassification":{
         "type":"object",
         "properties":{  
            "classification":{
               "type":"integer",
               "example":2
            },
            "format":{  
               "type":"integer",
               "example":-800
            },
            "id":{  
               "type":"integer",
               "example":2
            },
            "name":{
               "type":"string",
               "example":"File"
            },
            "permission":{  
               "type":"integer",
               "example":5
            },
            "size":{  
               "type":"integer",
               "example":394499
            },
            "duration":{  
               "type":"integer",
               "example":40000
            },
         }
      },
      "searchresult":{  
         "type":"object",
         "properties":{  
            "response":{
               "type":"object",
               "properties":{  
                  "numFound":{
                     "type":"integer",
                     "example":1
                  },
                  "start":{
                     "type":"integer",
                     "example":0
                  },
                  "docs":{
                     "type":"array",
                     "items":{
                        "type":"object",
                        "properties":{
                           "body":{
                              "type":"string",
                              "example":"Behavioral Science Data"
                           },
                           "name":{
                              "type":"string",
                              "example":"Behavioral Science Study"
                           },
                           "id":{
                              "type":"integer",
                              "example":5
                           },
                           "owner_names":{
                              "type":"array",
                              "items":{
                                 "type":"string",
                                 "example":"Smith, Jane"
                              }
                           },
                           "owner_ids":{
                              "type":"array",
                              "items":{
                                 "type":"integer",
                                 "example":7
                              }
                           }
                        }
                     }
                  }
               }
            },
            "spellcheck":{
               "type":"object",
               "properties":{  
                  "suggestions":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "example":"children"
                     }
                  }
               }
            }
         }
      },
      "slimsegment":{
         "type":"object",
         "properties":{  
            "permission":{  
               "type":"integer",
               "example":5
            },
            "segment":{  
               "$ref":"#/definitions/segment"
            }
         }
      },
      "segment":{
         "type":"array",
         "minItems": 2,
         "uniqueItems": true,
         "items":[
            {
               "type":"integer",
               "example":11813
            },
            {
               "type":"integer",
               "example":13282
            }
         ]
      },
      "registrant":{
         "type":"object",
         "properties":{ 
            "prename": {
               "type":"string",
               "example":"Jane"
            },
            "sortname": {
               "type":"string",
               "example":"Smith",
               "description":"Last name"
            },
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "agreement":{  
               "type":"boolean",
               "example":true
            }
         }
      },
      "gettoken":{
         "type":"object",
         "properties":{ 
            "id": {
               "type":"string",
               "example":"NuHqOHRqhp03dNscjpeGvWimWUu_P6PGN8h5Pgmllt4JwExtmL0yere1SqfDXomspQs2efz4xJyEMh"
            },
            "reset":{  
               "type":"boolean",
               "example":false
            }
         }
      },
      "userlogin":{
         "type":"object",
         "properties":{ 
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "password":{  
               "type":"string",
               "example":"strongpassword"
            }
         }
      },
      "userlogout":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":-1
            },
            "authorization":{  
               "type":"integer",
               "example":0
            },
            "institution": {
               "type":"boolean",
               "example":true
            },
            "sortname":{  
               "type":"string",
               "example":"Nobody"
            }
         }
      },
      "getparty":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":7
            },
            "affiliation": {
               "type":"string",
               "example":"New York University"
            },
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "prename": {
               "type":"string",
               "example":"Jane"
            },
            "sortname":{  
               "type":"string",
               "example":"Smith",
               "description":"Last name"
            },
            "permission":{  
               "type":"integer",
               "example":5
            }
         }
      },
      "affiliateapply": {
         "type":"object",
         "properties":{  
            "member":{  
               "type":"integer",
               "example":0
            },
            "site":{  
               "type":"integer",
               "example":0
            },
            "party":{
               "$ref":"#/definitions/affiliateapplicant"
            },
         }
      },
      "affiliateapplicant":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":7
            },
            "affiliation": {
               "type":"string",
               "example":"New York University"
            },
            "prename": {
               "type":"string",
               "example":"Jane"
            },
            "sortname":{  
               "type":"string",
               "example":"Smith",
               "description":"Last name"
            }
         }
      },
      "authorizeaffiliate": {
         "type":"object",
         "properties":{  
            "expires":{  
               "type":"string",
               "example":"2020-07-09"
            },
            "member":{  
               "type":"integer",
               "example":2
            },
            "site":{  
               "type":"integer",
               "example":3
            },
            "party":{
               "$ref":"#/definitions/affiliate"
            },
         }
      },
      "party":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":7
            },
            "affiliation": {
               "type":"string",
               "example":"New York University"
            },
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "prename": {
               "type":"string",
               "example":"Jane"
            },
            "sortname":{  
               "type":"string",
               "example":"Smith",
               "description":"Last name"
            }
         }
      },
      "affiliate":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":3
            },
            "affiliation": {
               "type":"string",
               "example":"New York University"
            },
            "email": {
               "type":"string",
               "example":"llee@university.edu"
            },
            "prename": {
               "type":"string",
               "example":"Lisa"
            },
            "sortname":{  
               "type":"string",
               "example":"Lee",
               "description":"Last name"
            }
         }
      },
      "notification":{
         "type":"object",
         "properties":{ 
            "agent":{
               "type":"object",
               "properties":{ 
                  "id":{  
                     "type":"integer",
                     "example":8
                  },
                  "prename": {
                     "type":"string",
                     "example":"Lisa"
                  },
                  "sortname":{  
                     "type":"string",
                     "example":"Lee",
                     "description":"Last name"
                  }
               }
            },
            "id":{  
               "type":"integer",
               "example":3
            },
            "delivered":{  
               "type":"integer",
               "example":1
            },
            "html": {
               "type":"string",
               "example":"<a href=\"/party/8\">Lisa Lee</a> requested <a href=\"/profile/edit?page=grant&amp;party=8\">authorization</a> from you."
            },
            "notice":{  
               "type":"integer",
               "example":6
            },
            "party":{  
               "type":"integer",
               "example":7
            },
            "time":{  
               "type":"string",
               "example":"2018-07-17T18:37:37.650356Z"
            },
         }
      },
      "profile":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":7
            },
            "affiliation": {
               "type":"string",
               "example":"New York University"
            },
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "prename": {
               "type":"string",
               "example":"Jane"
            },
            "permission":{  
               "type":"integer",
               "example":5
            },
            "sortname":{  
               "type":"string",
               "example":"Smith",
               "description":"Last name"
            }
         }
      },
      "postuser":{
         "type":"object",
         "properties":{ 
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "auth": {
               "type":"string",
               "example":"strongpassword",
               "description":"Old password"
            },
            "password":{
               "$ref":"#/definitions/password"
            }
         }
      },
      "password":{
         "type":"object",
         "properties":{ 
            "once": {
               "type":"string",
               "example":"newstrongpassword",
               "description":"New password"
            },
            "again": {
               "type":"string",
               "example":"newstrongpassword",
               "description":"New password typed in again"
            }
         }
      },
      "user":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":7
            },
            "authorization":{  
               "type":"integer",
               "example":5
            },
            "permission":{  
               "type":"integer",
               "example":5
            },
            "affiliation": {
               "type":"string",
               "example":"New York University"
            },
            "csverf":{  
               "type":"string",
               "example":"QxNXAduisOc_czDG"
            },
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "prename": {
               "type":"string",
               "example":"Jane"
            },
            "sortname":{  
               "type":"string",
               "example":"Smith",
               "description":"Last name"
            }
         }
      },
      "registeruser":{
         "type":"object",
         "properties":{ 
            "id":{  
               "type":"integer",
               "example":7
            },
            "authorization":{  
               "type":"integer",
               "example":5
            },
            "permission":{  
               "type":"integer",
               "example":5
            },
            "csverf":{  
               "type":"string",
               "example":"QxNXAduisOc_czDG"
            },
            "email": {
               "type":"string",
               "example":"jsmith@university.edu"
            },
            "prename": {
               "type":"string",
               "example":"Jane"
            },
            "sortname":{  
               "type":"string",
               "example":"Smith",
               "description":"Last name"
            }
         }
      },
      "getpartyactivity":{
         "type":"object",
         "properties":{ 
            "expires":{
               "type":"string",
               "example":"2019-07-09T12:00:10Z"
            },
            "action":{
               "type":"string",
               "example":"add"
            },
            "ip":{
               "type":"string",
               "example":"128.122.236.249"
            },
            "user":{
               "type":"integer",
               "example":7
            },
            "when":{
               "type":"string",
               "example":"2018-07-09T16:30:33.118638Z"
            },
            "member":{
               "type":"integer",
               "example":0
            },
            "type":{
               "type":"string",
               "example":"authorize"
            },
            "site":{
               "type":"integer",
               "example":3
            },
            "party":{
               "$ref":"#/definitions/affiliate"
            },
         }
      },

   },
   "externalDocs":{  
      "description":"Find out more about Swagger",
      "url":"http://swagger.io"
   }
}